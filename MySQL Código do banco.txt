-- Cria o banco de dados se não existir
CREATE DATABASE IF NOT EXISTS projeto_patrica;
USE projeto_patrica;

-- Tabela de formas de pagamento
CREATE TABLE IF NOT EXISTS FORMA_PAGAMENTO
(
    ID_FORMA_PAGAMENTO INT AUTO_INCREMENT PRIMARY KEY,
    DESCRICAO VARCHAR(40) NOT NULL UNIQUE,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL
);

-- Tabela de condições de pagamento
CREATE TABLE IF NOT EXISTS CONDICAO_PAGAMENTO
(
    ID_CONDICAO_PAGAMENTO INT AUTO_INCREMENT PRIMARY KEY,
    DESCRICAO VARCHAR(40) NOT NULL UNIQUE,
    QUANTIDADE_PARCELAS INT NOT NULL,
    JUROS DECIMAL(10,2) NOT NULL DEFAULT 0,
    MULTA DECIMAL(10,2) NOT NULL DEFAULT 0,
    DESCONTO DECIMAL(10,2) NOT NULL DEFAULT 0,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL
);

-- Tabela de parcelas da condição de pagamento
CREATE TABLE IF NOT EXISTS PARCELA_CONDICAO_PAGAMENTO
(
    ID_CONDICAO_PAGAMENTO INT NOT NULL,
    NUMERO_PARCELA INT NOT NULL,
    ID_FORMA_PAGAMENTO INT NOT NULL,
    VALOR_PERCENTUAL DECIMAL(10,2) NOT NULL,
    DIAS_APOS_VENDA INT NOT NULL,
    PRIMARY KEY (ID_CONDICAO_PAGAMENTO, NUMERO_PARCELA),
    CONSTRAINT FK_ParcelaCond_Condicao FOREIGN KEY (ID_CONDICAO_PAGAMENTO) REFERENCES CONDICAO_PAGAMENTO(ID_CONDICAO_PAGAMENTO)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ParcelaCond_Forma FOREIGN KEY (ID_FORMA_PAGAMENTO) REFERENCES FORMA_PAGAMENTO(ID_FORMA_PAGAMENTO)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Tabela de países
CREATE TABLE IF NOT EXISTS PAIS
(
    ID_PAIS INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(85) NOT NULL UNIQUE,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL
);

-- Tabela de estados
CREATE TABLE IF NOT EXISTS ESTADO
(
    ID_ESTADO INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(58) NOT NULL,
    ID_PAIS INT NOT NULL,
    CONSTRAINT UC_Estado UNIQUE (NOME, ID_PAIS),
    CONSTRAINT FK_Estado_Pais FOREIGN KEY (ID_PAIS) REFERENCES PAIS(ID_PAIS)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL
);

-- Tabela de cidades
CREATE TABLE IF NOT EXISTS CIDADE
(
    ID_CIDADE INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(58) NOT NULL,
    ID_ESTADO INT NOT NULL,
    CONSTRAINT UC_Cidade UNIQUE (NOME, ID_ESTADO),
    CONSTRAINT FK_Cidade_Estado FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO(ID_ESTADO)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL
);

-- Tabela de funcionários
CREATE TABLE IF NOT EXISTS FUNCIONARIO
(
    ID_FUNCIONARIO INT AUTO_INCREMENT PRIMARY KEY,
    TIPO_PESSOA CHAR(1) NOT NULL,
    NOME_RAZAO_SOCIAL VARCHAR(40) NOT NULL,
    APELIDO_NOME_FANTASIA VARCHAR(40) NULL,
    DATA_NASCIMENTO_CRIACAO DATE NOT NULL,
    CPF_CNPJ VARCHAR(14) UNIQUE NULL,
    RG_INSCRICAO_ESTADUAL VARCHAR(10) UNIQUE NOT NULL,
    EMAIL VARCHAR(40) NOT NULL,
    TELEFONE VARCHAR(20) NOT NULL,
    ENDERECO VARCHAR(40) NOT NULL,
    NUMERO_ENDERECO VARCHAR(20) NOT NULL,
    COMPLEMENTO_ENDERECO VARCHAR(40) NULL,
    BAIRRO VARCHAR(40) NOT NULL,
    ID_CIDADE INT NOT NULL,
    CEP VARCHAR(8) NULL,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    MATRICULA VARCHAR(20) UNIQUE NOT NULL,
    CARGO VARCHAR(40) NOT NULL,
    SALARIO DECIMAL(10,2) NOT NULL,
    DATA_ADMISSAO DATE NOT NULL,
    DATA_DEMISSAO DATE NULL,
    TURNO VARCHAR(40) NOT NULL,
    CARGA_HORARIA INT NOT NULL,
    GENERO CHAR(1) NOT NULL,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL,
    CONSTRAINT FK_Funcionario_Cidade FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE(ID_CIDADE)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Tabela de clientes
CREATE TABLE IF NOT EXISTS CLIENTE
(
    ID_CLIENTE INT AUTO_INCREMENT PRIMARY KEY,
    TIPO_PESSOA CHAR(1) NOT NULL,
    NOME_RAZAO_SOCIAL VARCHAR(40) NOT NULL,
    APELIDO_NOME_FANTASIA VARCHAR(40) NULL,
    DATA_NASCIMENTO_CRIACAO DATE NOT NULL,
    CPF_CNPJ VARCHAR(14) UNIQUE NULL,
    RG_INSCRICAO_ESTADUAL VARCHAR(10) UNIQUE NOT NULL,
    EMAIL VARCHAR(40) NOT NULL,
    TELEFONE VARCHAR(20) NOT NULL,
    ENDERECO VARCHAR(40) NOT NULL,
    NUMERO_ENDERECO VARCHAR(20) NOT NULL,
    COMPLEMENTO_ENDERECO VARCHAR(40) NULL,
    BAIRRO VARCHAR(40) NOT NULL,
    ID_CIDADE INT NOT NULL,
    CEP VARCHAR(8) NULL,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    GENERO CHAR(1) NULL,
    ID_CONDICAO_PAGAMENTO INT NOT NULL,
    LIMITE_CREDITO DECIMAL(10,2) NULL,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL,
    CONSTRAINT FK_Cliente_Cidade FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE(ID_CIDADE)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_Cliente_Condicao FOREIGN KEY (ID_CONDICAO_PAGAMENTO) REFERENCES CONDICAO_PAGAMENTO(ID_CONDICAO_PAGAMENTO)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Tabela de fornecedores
CREATE TABLE IF NOT EXISTS FORNECEDOR
(
    ID_FORNECEDOR INT AUTO_INCREMENT PRIMARY KEY,
    TIPO_PESSOA CHAR(1) NOT NULL,
    NOME_RAZAO_SOCIAL VARCHAR(40) NOT NULL,
    APELIDO_NOME_FANTASIA VARCHAR(40) NULL,
    DATA_NASCIMENTO_CRIACAO DATE NOT NULL,
    CPF_CNPJ VARCHAR(14) UNIQUE NULL,
    RG_INSCRICAO_ESTADUAL VARCHAR(10) UNIQUE NOT NULL,
    EMAIL VARCHAR(40) NOT NULL,
    TELEFONE VARCHAR(20) NOT NULL,
    ENDERECO VARCHAR(40) NOT NULL,
    NUMERO_ENDERECO VARCHAR(20) NOT NULL,
    COMPLEMENTO_ENDERECO VARCHAR(40) NULL,
    BAIRRO VARCHAR(40) NOT NULL,
    ID_CIDADE INT NOT NULL,
    CEP VARCHAR(8) NULL,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    GENERO CHAR(1) NULL,
    ID_CONDICAO_PAGAMENTO INT NOT NULL,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL,
    CONSTRAINT FK_Fornecedor_Cidade FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE(ID_CIDADE)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_Fornecedor_Condicao FOREIGN KEY (ID_CONDICAO_PAGAMENTO) REFERENCES CONDICAO_PAGAMENTO(ID_CONDICAO_PAGAMENTO)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Tabela de Categorias
CREATE TABLE IF NOT EXISTS CATEGORIA
(
    ID_CATEGORIA INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(40) NOT NULL UNIQUE,
    DESCRICAO VARCHAR(80) NULL,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL
);

-- Tabela de Marcas
CREATE TABLE IF NOT EXISTS MARCA
(
    ID_MARCA INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(40) NOT NULL UNIQUE,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL
);

-- Tabela de Unidades de Medida
CREATE TABLE IF NOT EXISTS UNIDADE_MEDIDA
(
    ID_UNIDADE_MEDIDA INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(40) NOT NULL UNIQUE,
    SIGLA VARCHAR(3) NOT NULL UNIQUE,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL
);

-- Tabela de transportadoras
CREATE TABLE IF NOT EXISTS TRANSPORTADORA
(
    ID_TRANSPORTADORA INT AUTO_INCREMENT PRIMARY KEY,
    TIPO_PESSOA CHAR(1) NOT NULL,
    NOME_RAZAO_SOCIAL VARCHAR(40) NOT NULL,
    APELIDO_NOME_FANTASIA VARCHAR(40) NULL,
    DATA_NASCIMENTO_CRIACAO DATE NOT NULL,
    CPF_CNPJ VARCHAR(14) UNIQUE NULL,
    RG_INSCRICAO_ESTADUAL VARCHAR(10) UNIQUE NOT NULL,
    EMAIL VARCHAR(40) NOT NULL,
    TELEFONE VARCHAR(20) NOT NULL,
    ENDERECO VARCHAR(40) NOT NULL,
    NUMERO_ENDERECO VARCHAR(20) NOT NULL,
    COMPLEMENTO_ENDERECO VARCHAR(40) NULL,
    BAIRRO VARCHAR(40) NOT NULL,
    ID_CIDADE INT NOT NULL,
    CEP VARCHAR(8) NULL,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    GENERO CHAR(1) NULL,
    ID_CONDICAO_PAGAMENTO INT NOT NULL,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL,
    CONSTRAINT FK_Transportadora_Cidade FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE(ID_CIDADE)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_Transportadora_Condicao FOREIGN KEY (ID_CONDICAO_PAGAMENTO) REFERENCES CONDICAO_PAGAMENTO(ID_CONDICAO_PAGAMENTO)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Tabela de Produtos
CREATE TABLE IF NOT EXISTS PRODUTO
(
    ID_PRODUTO INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(40) NOT NULL UNIQUE,
    DESCRICAO VARCHAR(80) NULL,
    CODIGO_BARRAS VARCHAR(13) NOT NULL UNIQUE,
    ID_MARCA INT NOT NULL,
    ID_CATEGORIA INT NOT NULL,
    ID_UNIDADE_MEDIDA INT NOT NULL,
    VALOR_COMPRA DECIMAL(10,2) NOT NULL DEFAULT 0,
    VALOR_VENDA DECIMAL(10,2) NOT NULL DEFAULT 0,
    VALOR_COMPRAANTERIOR DECIMAL(10,2) NOT NULL DEFAULT 0,
    PERCENTUAL_LUCRO DECIMAL(10,2) NOT NULL DEFAULT 0,
    ESTOQUE INT NOT NULL DEFAULT 0,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATE NULL,
    CONSTRAINT FK_Produto_Marca FOREIGN KEY (ID_MARCA) REFERENCES MARCA(ID_MARCA)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_Produto_Categoria FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIA(ID_CATEGORIA)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_Produto_UnidadeMedida FOREIGN KEY (ID_UNIDADE_MEDIDA) REFERENCES UNIDADE_MEDIDA(ID_UNIDADE_MEDIDA)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Tabela Associativa Produto-Fornecedor
CREATE TABLE IF NOT EXISTS PRODUTO_FORNECEDOR (
    ID_PRODUTO INT NOT NULL,
    ID_FORNECEDOR INT NOT NULL,
    VALOR_ULTIMA_COMPRA DECIMAL(10,2) NOT NULL,
    DATA_ULTIMA_COMPRA DATE NOT NULL,
    VALOR_ATUAL_COMPRA DECIMAL(10,2) NOT NULL,
    VALOR_UNITARIO DECIMAL(10,2) NOT NULL,
    PRIMARY KEY (ID_PRODUTO, ID_FORNECEDOR),
    CONSTRAINT FK_ProdutoFornecedor_Produto FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ProdutoFornecedor_Fornecedor FOREIGN KEY (ID_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Tabela de Compras
CREATE TABLE IF NOT EXISTS COMPRA
(
    MODELO INT NOT NULL,
    SERIE VARCHAR(3) NOT NULL,
    NUMERO_NOTA VARCHAR(9) NOT NULL,
    ID_FORNECEDOR INT NOT NULL,
    DATA_EMISSAO DATE NOT NULL,
    DATA_ENTREGA DATE NOT NULL,
    VALOR_FRETE DECIMAL(10,2) NOT NULL DEFAULT 0,
    SEGURO DECIMAL(10,2) NOT NULL DEFAULT 0,
    DESPESAS DECIMAL(10,2) NOT NULL DEFAULT 0,
    ID_CONDICAO_PAGAMENTO INT NOT NULL,
    MOTIVO_CANCELAMENTO VARCHAR(100) NULL,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DATA_ULTIMA_EDICAO DATETIME NULL,
    PRIMARY KEY (MODELO, SERIE, NUMERO_NOTA, ID_FORNECEDOR),
    CONSTRAINT FK_Compra_Fornecedor FOREIGN KEY (ID_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_Compra_CondicaoPagamento FOREIGN KEY (ID_CONDICAO_PAGAMENTO) REFERENCES CONDICAO_PAGAMENTO(ID_CONDICAO_PAGAMENTO)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Tabela de Itens da Compra
CREATE TABLE IF NOT EXISTS ITEM_COMPRA
(
    MODELO_COMPRA INT NOT NULL,
    SERIE_COMPRA VARCHAR(3) NOT NULL,
    NUMERO_NOTA_COMPRA VARCHAR(9) NOT NULL,
    ID_FORNECEDOR INT NOT NULL,
    ID_PRODUTO INT NOT NULL,
    QUANTIDADE INT NOT NULL,
    VALOR_UNITARIO DECIMAL(10,2) NOT NULL,
    CUSTO_UNITARIO_REAL DECIMAL(10,2) NOT NULL,
    PRIMARY KEY (MODELO_COMPRA, SERIE_COMPRA, NUMERO_NOTA_COMPRA, ID_FORNECEDOR, ID_PRODUTO),
    CONSTRAINT FK_ItemCompra_Compra FOREIGN KEY (MODELO_COMPRA, SERIE_COMPRA, NUMERO_NOTA_COMPRA, ID_FORNECEDOR) REFERENCES COMPRA(MODELO, SERIE, NUMERO_NOTA, ID_FORNECEDOR)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ItemCompra_Produto FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Tabela de Contas a Pagar
CREATE TABLE IF NOT EXISTS CONTAS_A_PAGAR
(
    MODELO_COMPRA INT NOT NULL,
    SERIE_COMPRA VARCHAR(3) NOT NULL,
    NUMERO_NOTA_COMPRA VARCHAR(9) NOT NULL,
    ID_FORNECEDOR INT NOT NULL,
    NUMERO_PARCELA INT NOT NULL,
    DATA_EMISSAO DATE NOT NULL,
    DATA_VENCIMENTO DATE NOT NULL,
    VALOR_PARCELA DECIMAL(10,2) NOT NULL,
    ID_FORMA_PAGAMENTO INT NOT NULL,
    ATIVO BOOLEAN NOT NULL DEFAULT TRUE,        
    SITUACAO INT NOT NULL DEFAULT 0, -- 0: Em aberto, 1: Pago
    JUROS DECIMAL(10,2) NOT NULL DEFAULT 0,
    MULTA DECIMAL(10,2) NOT NULL DEFAULT 0,
    DESCONTO DECIMAL(10,2) NOT NULL DEFAULT 0,
    VALOR_PAGO DECIMAL(10,2) NULL,
    DATA_PAGAMENTO DATETIME NULL,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, 
    DATA_ULTIMA_EDICAO DATETIME NULL,                         
    MOTIVO_CANCELAMENTO VARCHAR(100) NULL,                    
    PRIMARY KEY (MODELO_COMPRA, SERIE_COMPRA, NUMERO_NOTA_COMPRA, ID_FORNECEDOR, NUMERO_PARCELA),
    CONSTRAINT FK_ContasAPagar_Fornecedor FOREIGN KEY (ID_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_ContasAPagar_FormaPagamento FOREIGN KEY (ID_FORMA_PAGAMENTO) REFERENCES FORMA_PAGAMENTO(ID_FORMA_PAGAMENTO)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Trigger para cancelar Contas a Pagar quando a Compra é cancelada
-- Garante que o trigger seja removido antes de tentar criar novamente
DROP TRIGGER IF EXISTS TRG_CancelaContasAPagar_After_CompraUpdate;
DELIMITER //
CREATE TRIGGER TRG_CancelaContasAPagar_After_CompraUpdate
AFTER UPDATE ON COMPRA
FOR EACH ROW
BEGIN
    -- Verifica se o status ATIVO da compra foi alterado de TRUE para FALSE
    IF OLD.ATIVO = TRUE AND NEW.ATIVO = FALSE THEN
        -- Atualiza as contas a pagar correspondentes
        UPDATE CONTAS_A_PAGAR
        SET
            ATIVO = FALSE,
            DATA_ULTIMA_EDICAO = CURRENT_TIMESTAMP,
            MOTIVO_CANCELAMENTO = NEW.MOTIVO_CANCELAMENTO
        WHERE
            MODELO_COMPRA = NEW.MODELO
            AND SERIE_COMPRA = NEW.SERIE
            AND NUMERO_NOTA_COMPRA = NEW.NUMERO_NOTA
            AND ID_FORNECEDOR = NEW.ID_FORNECEDOR;
    END IF;
END; //
DELIMITER ;